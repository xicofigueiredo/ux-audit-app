<!DOCTYPE html>
<html>
  <head>
    <title>UX Audit App</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="icon" type="image/x-icon" href="/favicon.ico">

    <%= stylesheet_link_tag "application" %>
    <script src="https://cdn.tailwindcss.com"></script>

    <% if Rails.env.production? || Rails.env.development? %>
      <!-- Google tag (gtag.js) -->
      <script async src="https://www.googletagmanager.com/gtag/js?id=G-JYRMQDB1V4"></script>
      <script nonce="<%= content_security_policy_nonce %>">
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        <% if Rails.env.production? %>
          gtag('config', 'G-JYRMQDB1V4', {
            'anonymize_ip': true,
            'allow_google_signals': false,
            'allow_ad_personalization_signals': false,
            <% if user_signed_in? %>
            'user_id': '<%= current_user.id %>',
            'custom_map': {
              'custom_dimension_1': 'user_role',
              'custom_dimension_2': 'session_count',
              'custom_dimension_3': 'audit_count'
            }
            <% end %>
          });
        <% else %>
          gtag('config', 'G-JYRMQDB1V4', {
            'debug_mode': true,
            'anonymize_ip': true,
            'allow_google_signals': false,
            'allow_ad_personalization_signals': false,
            <% if user_signed_in? %>
            'user_id': '<%= current_user.id %>',
            'custom_map': {
              'custom_dimension_1': 'user_role',
              'custom_dimension_2': 'session_count',
              'custom_dimension_3': 'audit_count'
            }
            <% end %>
          });
          console.log('Google Analytics loaded in development mode');
        <% end %>

        // Global error tracking
        window.addEventListener('error', function(e) {
          gtag('event', 'javascript_error', {
            event_category: 'error',
            error_message: e.message,
            error_filename: e.filename,
            error_lineno: e.lineno,
            error_colno: e.colno,
            page_url: window.location.href
          });
        });

        // Unhandled promise rejection tracking
        window.addEventListener('unhandledrejection', function(e) {
          gtag('event', 'unhandled_promise_rejection', {
            event_category: 'error',
            error_message: e.reason ? e.reason.toString() : 'Unknown promise rejection',
            page_url: window.location.href
          });
        });
      </script>

      <!-- Mixpanel -->
      <script type="text/javascript" nonce="<%= content_security_policy_nonce %>">
        (function(e,c){if(!c.__SV){var l,h;window.mixpanel=c;c._i=[];c.init=function(q,r,f){function t(d,a){var g=a.split(".");2==g.length&&(d=d[g[0]],a=g[1]);d[a]=function(){d.push([a].concat(Array.prototype.slice.call(arguments,0)))}}var b=c;"undefined"!==typeof f?b=c[f]=[]:f="mixpanel";b.people=b.people||[];b.toString=function(d){var a="mixpanel";"mixpanel"!==f&&(a+="."+f);d||(a+=" (stub)");return a};b.people.toString=function(){return b.toString(1)+".people (stub)"};l="disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders start_session_recording stop_session_recording people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove".split(" ");
        for(h=0;h<l.length;h++)t(b,l[h]);var n="set set_once union unset remove delete".split(" ");b.get_group=function(){function d(p){a[p]=function(){b.push([g,[p].concat(Array.prototype.slice.call(arguments,0))])}}for(var a={},g=["get_group"].concat(Array.prototype.slice.call(arguments,0)),m=0;m<n.length;m++)d(n[m]);return a};c._i.push([q,r,f])};c.__SV=1.2;var k=e.createElement("script");k.type="text/javascript";k.async=!0;k.src="undefined"!==typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:"file:"===
        e.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=e.getElementsByTagName("script")[0];e.parentNode.insertBefore(k,e)}})(document,window.mixpanel||[])

        mixpanel.init('6aeda11a41b8b8561342ce4e2df6cd7b', {
          autocapture: true,
          record_sessions_percent: 100,
          api_host: 'https://api-eu.mixpanel.com',
          <% if Rails.env.development? %>
          debug: true
          <% end %>
        });

        <% if user_signed_in? %>
          // Identify user in Mixpanel
          mixpanel.identify('<%= current_user.id %>');
          mixpanel.people.set({
            '$email': '<%= current_user.email %>',
            '$created': '<%= current_user.created_at.iso8601 %>',
            'User ID': '<%= current_user.id %>'
          });
        <% end %>

        <% if Rails.env.development? %>
          console.log('Mixpanel loaded in development mode');
        <% end %>

        // Global error tracking for Mixpanel
        window.addEventListener('error', function(e) {
          if (window.mixpanel) {
            mixpanel.track('javascript_error', {
              error_message: e.message,
              error_filename: e.filename,
              error_lineno: e.lineno,
              error_colno: e.colno,
              page_url: window.location.href
            });
          }
        });

        // Unhandled promise rejection tracking for Mixpanel
        window.addEventListener('unhandledrejection', function(e) {
          if (window.mixpanel) {
            mixpanel.track('unhandled_promise_rejection', {
              error_message: e.reason ? e.reason.toString() : 'Unknown promise rejection',
              page_url: window.location.href
            });
          }
        });
      </script>
    <% end %>
  </head>

  <body class="bg-[#f6f4ff]">
    <!-- Feedback Button (Fixed Position) -->
    <button id="feedback-open-btn" class="fixed bottom-6 right-6 bg-purple-600 hover:bg-purple-700 text-white font-semibold px-4 py-3 rounded-lg shadow-lg transition" style="z-index: 9999;">
      Share Feedback
    </button>

    <!-- Feedback Modal -->
    <div id="feedback-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center" style="z-index: 10000;">
      <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto" onclick="event.stopPropagation()">
        <div class="p-6">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-2xl font-bold text-gray-800">Share Your Feedback</h2>
            <button id="feedback-close-btn" class="text-gray-500 hover:text-gray-700 text-2xl font-bold">
              &times;
            </button>
          </div>

          <!-- Message Area -->
          <div id="feedback-message" class="hidden p-3 rounded mb-4"></div>

          <form id="feedback-form">
            <!-- Feedback Textarea -->
            <div class="mb-4">
              <label for="feedback-textarea" class="block text-sm font-medium text-gray-700 mb-2">
                Your Feedback
              </label>
              <textarea
                id="feedback-textarea"
                name="feedback"
                rows="6"
                maxlength="5000"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
                placeholder="Tell us what you think..."
              ></textarea>
              <div class="text-right mt-1">
                <span id="feedback-char-count" class="text-sm text-gray-500">0 / 5000</span>
              </div>
            </div>

            <!-- Image Upload -->
            <div class="mb-4">
              <label for="feedback-images" class="block text-sm font-medium text-gray-700 mb-2">
                Attach Images (Optional - Max 5)
              </label>
              <input
                type="file"
                id="feedback-images"
                name="images[]"
                accept="image/*"
                multiple
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
              />
              <div id="feedback-image-previews" class="mt-3"></div>
            </div>

            <!-- Buttons -->
            <div class="flex justify-end space-x-3">
              <button
                type="button"
                id="feedback-cancel-btn"
                class="px-5 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition"
              >
                Cancel
              </button>
              <button
                type="submit"
                id="feedback-submit-btn"
                class="px-5 py-2 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-lg transition"
              >
                Submit Feedback
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <script nonce="<%= content_security_policy_nonce %>">
      (function() {
        const modal = document.getElementById('feedback-modal');
        const openBtn = document.getElementById('feedback-open-btn');
        const closeBtn = document.getElementById('feedback-close-btn');
        const cancelBtn = document.getElementById('feedback-cancel-btn');
        const form = document.getElementById('feedback-form');
        const textarea = document.getElementById('feedback-textarea');
        const charCount = document.getElementById('feedback-char-count');
        const imageInput = document.getElementById('feedback-images');
        const imagePreviews = document.getElementById('feedback-image-previews');
        const message = document.getElementById('feedback-message');
        const submitBtn = document.getElementById('feedback-submit-btn');

        function openModal() {
          modal.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        }

        function closeModal() {
          modal.classList.add('hidden');
          document.body.style.overflow = 'auto';
          resetForm();
        }

        function resetForm() {
          form.reset();
          imagePreviews.innerHTML = '';
          updateCharCount();
          message.classList.add('hidden');
        }

        function updateCharCount() {
          const count = textarea.value.length;
          charCount.textContent = count + ' / 5000';
          if (count > 5000) {
            charCount.classList.add('text-red-600');
            charCount.classList.remove('text-gray-500');
          } else {
            charCount.classList.add('text-gray-500');
            charCount.classList.remove('text-red-600');
          }
        }

        function handleImageSelect() {
          const files = Array.from(imageInput.files);
          if (files.length > 5) {
            showMessage('Maximum 5 images allowed', 'error');
            imageInput.value = '';
            return;
          }

          imagePreviews.innerHTML = '';
          files.forEach((file, index) => {
            if (!file.type.startsWith('image/')) {
              showMessage('Only image files are allowed', 'error');
              return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
              const preview = document.createElement('div');
              preview.className = 'relative inline-block mr-2 mb-2';
              preview.innerHTML =
                '<img src="' + e.target.result + '" class="h-20 w-20 object-cover rounded border" alt="Preview ' + (index + 1) + '">' +
                '<button type="button" data-index="' + index + '" class="remove-image-btn absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600">' +
                '×' +
                '</button>';
              imagePreviews.appendChild(preview);
            };
            reader.readAsDataURL(file);
          });
        }

        function removeImage(index) {
          const dt = new DataTransfer();
          const files = Array.from(imageInput.files);
          files.forEach((file, i) => {
            if (i !== index) dt.items.add(file);
          });
          imageInput.files = dt.files;
          handleImageSelect();
        }

        async function submitForm(e) {
          e.preventDefault();

          const feedback = textarea.value.trim();
          if (!feedback) {
            showMessage('Please enter your feedback', 'error');
            return;
          }

          if (feedback.length > 5000) {
            showMessage('Feedback must be less than 5000 characters', 'error');
            return;
          }

          submitBtn.disabled = true;
          submitBtn.textContent = 'Sending...';

          const formData = new FormData(form);

          try {
            const csrfToken = document.querySelector("[name='csrf-token']").content;
            const response = await fetch('/feedback', {
              method: 'POST',
              body: formData,
              headers: {
                'X-CSRF-Token': csrfToken
              }
            });

            const data = await response.json();

            if (response.ok) {
              showMessage('Thank you for your feedback!', 'success');
              setTimeout(closeModal, 2000);
            } else {
              showMessage(data.error || 'Failed to send feedback', 'error');
            }
          } catch (error) {
            console.error('Feedback submission error:', error);
            showMessage('An error occurred. Please try again.', 'error');
          } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = 'Submit Feedback';
          }
        }

        function showMessage(text, type) {
          message.textContent = text;
          message.classList.remove('hidden', 'bg-green-100', 'text-green-700', 'bg-red-100', 'text-red-700');
          if (type === 'success') {
            message.classList.add('bg-green-100', 'text-green-700');
          } else {
            message.classList.add('bg-red-100', 'text-red-700');
          }
          setTimeout(() => message.classList.add('hidden'), 5000);
        }

        // Event listeners
        openBtn.addEventListener('click', openModal);
        closeBtn.addEventListener('click', closeModal);
        cancelBtn.addEventListener('click', closeModal);
        modal.addEventListener('click', function(e) {
          if (e.target === modal) closeModal();
        });
        textarea.addEventListener('input', updateCharCount);
        imageInput.addEventListener('change', handleImageSelect);
        form.addEventListener('submit', submitForm);
        imagePreviews.addEventListener('click', function(e) {
          if (e.target.classList.contains('remove-image-btn')) {
            removeImage(parseInt(e.target.dataset.index));
          }
        });

        // Initialize
        updateCharCount();
      })();
    </script>

    <!-- Marketing Header -->
    <header class="bg-white shadow-sm">
      <div class="container mx-auto px-4 py-4 flex justify-between items-center">
        <div class="flex items-center space-x-2">
          <%= link_to marketing_root_path, class: "flex items-center space-x-2" do %>
            <img src="/logo.svg" alt="UX Audit App" class="w-10 h-10 rounded-xl">
            <span class="text-2xl font-extrabold text-gray-800 tracking-tight">UX Audit App</span>
          <% end %>
        </div>
        <nav class="flex-1 flex justify-center hidden md:flex">
          <ul class="flex space-x-8 font-medium text-gray-700">
            <li><a href="#how-it-works" class="hover:text-purple-600">How It Works</a></li>
            <li><a href="#benefits" class="hover:text-purple-600">Benefits</a></li>
            <li><%= link_to "Knowledge Base", ux_knowledge_documents_path, class: "hover:text-purple-600" %></li>
            <li><a href="#faq" class="hover:text-purple-600">FAQ</a></li>
          </ul>
        </nav>
        <div class="hidden md:flex items-center space-x-4">
          <% if user_signed_in? %>
            <span class="text-gray-700">Welcome, <%= current_user.email.split('@').first %></span>
            <%= link_to "Go to App", after_sign_in_url, class: "bg-purple-600 hover:bg-purple-700 text-white font-semibold px-5 py-2 rounded-lg shadow transition" %>
            <% if respond_to?(:destroy_user_session_path) %>
              <%= button_to "Sign out", destroy_user_session_path, method: :delete, class: "text-gray-700 hover:text-purple-600 bg-transparent border-0 p-0 cursor-pointer", form: { style: "display: inline-block;" } %>
            <% end %>
          <% else %>
            <% if respond_to?(:new_user_session_path) %>
              <%= link_to "Sign in", new_user_session_path, class: "text-gray-700 hover:text-purple-600 mr-4" %>
            <% end %>
            <% if respond_to?(:new_user_registration_path) %>
              <%= link_to "Sign up", new_user_registration_path, class: "bg-purple-600 hover:bg-purple-700 text-white font-semibold px-5 py-2 rounded-lg shadow transition" %>
            <% end %>
          <% end %>
        </div>
        <!-- Mobile menu button -->
        <button class="md:hidden text-gray-700 hover:text-purple-600">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </header>

    <main>
      <% if notice %>
        <div class="container mx-auto px-4 mt-4">
          <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4" role="alert">
            <%= notice %>
          </div>
        </div>
      <% end %>
      <% if alert %>
        <div class="container mx-auto px-4 mt-4">
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
            <%= alert %>
          </div>
        </div>
      <% end %>
      <%= yield %>
    </main>

    <%= yield :analytics_events %>
    <%= render_queued_analytics_events %>
  </body>
</html>
